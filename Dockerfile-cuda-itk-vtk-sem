FROM nvidia/cuda:8.0-cudnn5-runtime-ubuntu16.04
MAINTAINER Deepak Roy Chittajallu <deepk.chittajallu@kitware.com>

# Install system pre-requisites
RUN apt-get update && \
    apt-get install -y \
    build-essential wget git \
    make cmake cmake-curses-gui ninja-build \
    libxt-dev libgl1-mesa-dev libcupti-dev && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Libraries build path
ENV BUILD_PATH /build

# Install miniconda
RUN mkdir -p $BUILD_PATH && \
    wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh \
    -O $BUILD_PATH/install_miniconda.sh && \
    bash $BUILD_PATH/install_miniconda.sh -b -p $BUILD_PATH/miniconda && \
    rm $BUILD_PATH/install_miniconda.sh && \
    chmod -R +r $BUILD_PATH && \
    chmod +x $BUILD_PATH/miniconda/bin/python
ENV PATH $BUILD_PATH/miniconda/bin:${PATH}

# Install CMake
ENV CMAKE_ARCHIVE_SHA256 10ca0e25b7159a03da0c1ec627e686562dc2a40aad5985fd2088eb684b08e491
ENV CMAKE_VERSION_MAJOR 3
ENV CMAKE_VERSION_MINOR 8
ENV CMAKE_VERSION_PATCH 1
ENV CMAKE_VERSION ${CMAKE_VERSION_MAJOR}.${CMAKE_VERSION_MINOR}.${CMAKE_VERSION_PATCH}
RUN cd $BUILD_PATH && \
  wget https://cmake.org/files/v${CMAKE_VERSION_MAJOR}.${CMAKE_VERSION_MINOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz && \
  hash=$(sha256sum ./cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz | awk '{ print $1 }') && \
  [ $hash = "${CMAKE_ARCHIVE_SHA256}" ] && \
  tar -xzvf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz && \
  rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
ENV PATH $BUILD_PATH/cmake-${CMAKE_VERSION}-Linux-x86_64/bin:${PATH}

# Disable "You are in 'detached HEAD' state." warning
RUN git config --global advice.detachedHead false

# Download/configure/build/install ITK
ENV ITK_GIT_TAG v4.11.1
ENV ITK_BUILD_DIR $BUILD_PATH/ITK-build
RUN cd $BUILD_PATH && git clone --depth 1 -b ${ITK_GIT_TAG} https://github.com/InsightSoftwareConsortium/ITK.git && \
    mkdir ITK-build && \
    cd ITK-build && \
    cmake \
        -G Ninja \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DBUILD_SHARED_LIBS:BOOL=ON \
        -DBUILD_EXAMPLES:BOOL=OFF \
        -DBUILD_TESTING:BOOL=OFF \
        -DITKV3_COMPATIBILITY:BOOL=ON \
        -DITK_BUILD_DEFAULT_MODULES:BOOL=ON \
        -DITK_INSTALL_NO_DEVELOPMENT:BOOL=ON \
        -DITK_LEGACY_REMOVE:BOOL=OFF \
        -DITK_LEGACY_SILENT:BOOL=ON \
        -DITK_WRAP_PYTHON:BOOL=ON \
        -DModule_MinimalPathExtraction:BOOL=ON \
        -DKWSYS_USE_MD5:BOOL=ON \
        -DModule_ITKReview:BOOL=ON \
        ../ITK && \
    ninja && \
    cp Wrapping/Generators/Python/WrapITK.pth $BUILD_PATH/miniconda/lib/python2.7/site-packages && \
    python -c "import itk" && \
    find . -name '*.o' -delete && \
    find ../ITK* -depth -name .git -exec rm -rf '{}' \;

# Download/configure/build/install VTK
ENV VTK_GIT_TAG v7.1.1
ENV VTK_BUILD_DIR $BUILD_PATH/VTK-build
RUN cd $BUILD_PATH && git clone --depth 1 -b ${VTK_GIT_TAG} https://github.com/Kitware/VTK.git && \
    mkdir VTK-build && \
    cd VTK-build && \
    cmake \
        -G Ninja \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DBUILD_SHARED_LIBS:BOOL=ON \
        -DBUILD_EXAMPLES:BOOL=OFF \
        -DBUILD_TESTING:BOOL=OFF \
        -DVTK_LEGACY_REMOVE:BOOL=ON \
        -DVTK_WRAP_PYTHON:BOOL=ON \
        ../VTK && \
    ninja && \
    echo "${VTK_BUILD_DIR}/lib" > $BUILD_PATH/miniconda/lib/python2.7/site-packages/WrapVTK.pth && \
    echo "${VTK_BUILD_DIR}/Wrapping/Python" >> $BUILD_PATH/miniconda/lib/python2.7/site-packages/WrapVTK.pth && \
    python -c "import vtk" && \
    find . -name '*.o' -delete && \
    find ../VTK* -depth -name .git -exec rm -rf '{}' \;

# Download/configure/build/install SlicerExecutionModel
ENV SEM_GIT_TAG 61bb14d57ff45c8de0f506e23b6ec982fcdf0da2
ENV SEM_BUILD_DIR $BUILD_PATH/SEM-build
RUN cd $BUILD_PATH && \
    git clone https://github.com/Slicer/SlicerExecutionModel.git SEM && \
    (cd SEM && git checkout ${SEM_GIT_TAG}) && \
    mkdir SEM-build && cd SEM-build && \
    cmake \
        -G Ninja \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DBUILD_SHARED_LIBS:BOOL=ON \
        -DBUILD_TESTING:BOOL=OFF \
        -DITK_DIR:PATH=$BUILD_PATH/ITK-build \
        ../SEM && \
    ninja && \
    find . -name '*.o' -delete && \
    find ../SEM* -depth -name .git -exec rm -rf '{}' \;

# Download and install slicer_cli_web
RUN cd $BUILD_PATH && \
    git clone https://github.com/girder/slicer_cli_web.git && \
    cd slicer_cli_web && \
    git checkout take_cpp_cli_from_path && \
    conda install --yes -c cdeepakroy ctk-cli=1.4.1 && \
    find . -depth -name .git -exec rm -rf '{}' \;
